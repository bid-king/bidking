# Server port
server.port = 8080

# MySQL
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = ${db_url}
spring.datasource.username = ${db_username}
spring.datasource.password = ${db_password}

# JPA
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.highlight_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true
logging.level.org.hibernate.type.descriptor.sql = trace
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.database-platform = org.hibernate.dialect.MySQL8Dialect

# 404 에러 처리
spring.mvc.throw-exception-if-no-handler-found = true
spring.web.resources.add-mappings = false

#Live Reload
spring.devtools.livereload.enabled = true

# multipart 설정
spring.servlet.multipart.max-file-size : ${properties.file.size}
spring.servlet.multipart.max-request-size : ${properties.file.size}

# aws 설정
cloud.aws.s3.bucket = bidking
cloud.aws.credentials.access-key = ${properties.file.access-key}
cloud.aws.credentials.secret-key = ${properties.file.secret-key}
cloud.aws.region.static = ap-northeast-2
cloud.aws.region.auto = false
cloud.aws.stack.auto = false

# redis
spring.data.redis.host = ${redis_host}
spring.data.redis.port = ${redis_port}
spring.data.redis.password = ${redis_password}
spring.autoconfigure.exclude = org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration